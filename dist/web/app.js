(()=>{var u=class{constructor(e="extension"){this.environment=e}async saveApiKey(e){if(this.environment==="extension")return chrome.storage.local.set({geminiApiKey:e,apiKeySet:!0});localStorage.setItem("tabtalk_api_key",e),localStorage.setItem("apiKeySet","true")}async loadApiKey(){return this.environment==="extension"?(await chrome.storage.local.get(["geminiApiKey"])).geminiApiKey||null:localStorage.getItem("tabtalk_api_key")||null}async saveChatHistory(e,t){let s=`chatHistory_${e}`;if(this.environment==="extension")return chrome.storage.local.set({[s]:t});localStorage.setItem(s,JSON.stringify(t))}async loadChatHistory(e){let t=`chatHistory_${e}`;if(this.environment==="extension")return(await chrome.storage.local.get([t]))[t]||[];{let s=localStorage.getItem(t);return s?JSON.parse(s):[]}}async saveSetting(e,t){if(this.environment==="extension")return chrome.storage.local.set({[e]:t});localStorage.setItem(e,JSON.stringify(t))}async loadSetting(e,t=null){if(this.environment==="extension"){let s=await chrome.storage.local.get([e]);return s[e]!==void 0?s[e]:t}else{let s=localStorage.getItem(e);return s!==null?JSON.parse(s):t}}async clearAll(){if(this.environment==="extension")return chrome.storage.local.clear();localStorage.clear()}async deleteApiKey(){if(this.environment==="extension")return chrome.storage.local.remove(["geminiApiKey","apiKeySet"]);localStorage.removeItem("tabtalk_api_key"),localStorage.removeItem("apiKeySet")}};var g=class{constructor(e="extension"){this.environment=e,this.storage=new u(e),this.state={apiKey:null,chatHistory:[],currentDomain:null,isDarkMode:!1,isLoading:!1}}async loadState(){if(this.state.apiKey=await this.storage.loadApiKey(),this.state.isDarkMode=await this.storage.loadSetting("darkMode",!1),this.environment==="extension"){let[e]=await chrome.tabs.query({active:!0,currentWindow:!0});e&&(this.state.currentDomain=new URL(e.url).hostname)}return this.state.currentDomain&&(this.state.chatHistory=await this.storage.loadChatHistory(this.state.currentDomain)),this.state}async saveState(){this.state.apiKey&&await this.storage.saveApiKey(this.state.apiKey),await this.storage.saveSetting("darkMode",this.state.isDarkMode),this.state.currentDomain&&this.state.chatHistory.length>0&&await this.storage.saveChatHistory(this.state.currentDomain,this.state.chatHistory)}async deleteApiKey(){await this.storage.deleteApiKey(),this.state.apiKey=null}updateApiKey(e){this.state.apiKey=e}updateChatHistory(e){this.state.chatHistory=e}updateCurrentDomain(e){this.state.currentDomain=e}toggleDarkMode(){this.state.isDarkMode=!this.state.isDarkMode}setLoading(e){this.state.isLoading=e}getState(){return{...this.state}}};var p=class{constructor(e,t="extension"){this.apiKey=e,this.environment=t,this.baseURL="https://generativelanguage.googleapis.com/v1beta/models/",this.model="gemini-2.0-flash"}async generateContent(e,t={}){let s=[{role:"user",parts:[{text:e}]}];return this.callAPI({contents:s})}async callAPI(e){return this.environment==="extension"?this.callViaBackground(e):this.callDirect(e)}async callViaBackground(e){try{let t=await chrome.runtime.sendMessage({action:"callGeminiAPI",payload:e,apiKey:this.apiKey});if(t.success&&t.data?.candidates?.[0]?.content?.parts?.[0]?.text)return t.data.candidates[0].content.parts[0].text;throw new Error(t.error||"The AI gave an empty or invalid response.")}catch(t){throw new Error(`API Error: ${t.message}`)}}async callDirect(e){let t=`${this.baseURL}${this.model}:generateContent?key=${this.apiKey}`;try{let s=await fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}),a=await s.text();if(!s.ok){let l=`API request failed (Status: ${s.status}).`;try{let o=JSON.parse(a);o?.error?.message&&(l=`API Error: ${o.error.message}`)}catch{l+=` Details: ${a.substring(0,150)}...`}throw new Error(l)}let i=JSON.parse(a);if(i?.candidates?.[0]?.content?.parts?.[0]?.text)return i.candidates[0].content.parts[0].text;throw new Error("The AI gave an empty or invalid response.")}catch(s){throw new Error(`Network Error: ${s.message}`)}}};var y=class{constructor(e=null){this.marked=e,this.marked&&this.marked.setOptions({gfm:!0,breaks:!0,sanitize:!0})}renderMessage(e){let t=document.createElement("div");t.classList.add("message",e.role,"visible"),e.contentType&&t.classList.add(`${e.contentType}-message`);let s=document.createElement("div");s.classList.add("message-header");let a=document.createElement("div");if(a.classList.add("avatar"),e.role==="user")a.textContent="\u{1F464}";else switch(e.contentType){case"summary":a.textContent="\u{1F4DD}";break;case"keypoints":a.textContent="\u{1F511}";break;case"analysis":a.textContent="\u{1F4CA}";break;case"faq":a.textContent="\u2753";break;case"factcheck":a.textContent="\u2705";break;default:a.textContent="\u{1F916}"}let i=document.createElement("div");i.classList.add("timestamp");let l=e.timestamp||new Date().toISOString();i.textContent=new Date(l).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}),e.role==="user"?(s.appendChild(i),s.appendChild(a)):(s.appendChild(a),s.appendChild(i));let o=document.createElement("div");if(o.classList.add("content"),this.marked&&e.content?o.innerHTML=this.marked.parse(e.content):o.textContent=e.content||"",e.role==="assistant"){let r=document.createElement("button");r.classList.add("copy-button"),r.innerHTML="\u{1F4CB}",r.title="Copy to clipboard",r.addEventListener("click",()=>{navigator.clipboard.writeText(e.content).then(()=>{let h=r.innerHTML;r.innerHTML="\u2713",setTimeout(()=>{r.innerHTML=h},2e3)})}),o.appendChild(r)}return t.appendChild(s),t.appendChild(o),t}formatSpecialContent(e,t){return e}};var n={SUMMARY:"summary",KEYPOINTS:"keypoints",ANALYSIS:"analysis",FAQ:"faq",FACTCHECK:"factcheck"};var S={INITIALIZING:"Initializing...",LOADING_PAGE:"Reading page...",SENDING_MESSAGE:"Sending message...",DONE:"\u2705 Done",ERROR_PREFIX:"\u274C "},L={[n.SUMMARY]:{system:"You are an expert content summarizer. Create a concise summary of the provided webpage content. Focus on the main points and key information. Keep it under 200 words.",user:"Please provide a summary of this webpage content:"},[n.KEYPOINTS]:{system:"You are a key point extractor. Identify and list the most important points from the provided content. Number each point and keep them brief but informative. Limit to 5-7 key points.",user:"Please extract the key points from this content:"},[n.ANALYSIS]:{system:"You are a content analyst. Provide a detailed analysis of the provided webpage content. Include main themes, important facts, potential implications, and your expert insights. Structure your response with clear headings.",user:"Please analyze this content in detail:"},[n.FAQ]:{system:"You are a FAQ generator. Based on the provided content, create 5-8 frequently asked questions and their answers. Make the questions relevant to readers who want to understand the content better.",user:"Please generate a FAQ based on this content:"},[n.FACTCHECK]:{system:"You are a fact-checker. Identify any claims, statistics, or statements in the provided content that could be verified. For each, indicate whether it can be confirmed, disputed, or is unverifiable, and explain why.",user:"Please fact-check this content:"}};function I(d){try{return new URL(d),!0}catch{return!1}}var E=class{constructor(){this.stateManager=new g("web"),this.apiClient=null,this.messageRenderer=new y(marked),this.currentContent="",this.views={},this.domElements={},this.init()}init(){this.cacheDOMElements(),this.setupEventListeners(),this.applyTheme(),this.determineInitialView(),this.setupAutoResize()}cacheDOMElements(){this.views={settings:document.getElementById("settings-view"),chat:document.getElementById("chat-view"),status:document.getElementById("status-view"),urlInput:document.getElementById("url-input-view")},this.domElements={apiKeyInput:document.getElementById("api-key-input"),messagesContainer:document.getElementById("messages-container"),messageInput:document.getElementById("message-input"),sendButton:document.getElementById("send-button"),statusText:document.getElementById("status-text"),pageTitle:document.getElementById("page-title"),pageStatus:document.getElementById("page-status"),menuButton:document.getElementById("menu-button"),sidebar:document.getElementById("sidebar"),exportChatButton:document.getElementById("export-chat-button"),quickActions:document.getElementById("quick-actions"),darkModeToggle:document.getElementById("dark-mode-toggle"),urlInput:document.getElementById("url-input")}}setupEventListeners(){this.domElements.darkModeToggle&&(this.domElements.darkModeToggle.checked=this.stateManager.getState().isDarkMode,this.domElements.darkModeToggle.addEventListener("change",()=>this.toggleTheme())),this.domElements.menuButton&&this.domElements.menuButton.addEventListener("click",()=>this.toggleSidebar()),[{id:"menu-settings-link",action:()=>this.showView("settings")},{id:"menu-refresh-link",action:()=>this.clearChat()},{id:"menu-url-input-link",action:()=>this.showView("url-input")},{id:"menu-summary-link",action:()=>this.handleQuickAction(n.SUMMARY)},{id:"menu-keypoints-link",action:()=>this.handleQuickAction(n.KEYPOINTS)},{id:"menu-analysis-link",action:()=>this.handleQuickAction(n.ANALYSIS)},{id:"menu-faq-link",action:()=>this.handleQuickAction(n.FAQ)}].forEach(c=>{let m=document.getElementById(c.id);m&&m.addEventListener("click",k=>{k.preventDefault(),c.action(),this.hideSidebar()})}),[{id:"quick-summary",action:()=>this.handleQuickAction(n.SUMMARY)},{id:"quick-keypoints",action:()=>this.handleQuickAction(n.KEYPOINTS)},{id:"quick-analysis",action:()=>this.handleQuickAction(n.ANALYSIS)},{id:"quick-faq",action:()=>this.handleQuickAction(n.FAQ)}].forEach(c=>{let m=document.getElementById(c.id);m&&m.addEventListener("click",c.action)});let s=document.getElementById("settings-save-button");s&&s.addEventListener("click",()=>this.saveSettings());let a=document.getElementById("settings-cancel-button");a&&a.addEventListener("click",()=>this.cancelSettings());let i=document.getElementById("url-analyze-button");i&&i.addEventListener("click",()=>this.analyzeUrl());let l=document.getElementById("url-cancel-button");l&&l.addEventListener("click",()=>this.cancelUrlInput()),this.domElements.messageInput&&(this.domElements.messageInput.addEventListener("input",()=>this.handleInputChange()),this.domElements.messageInput.addEventListener("keydown",c=>this.handleKeyDown(c))),this.domElements.sendButton&&this.domElements.sendButton.addEventListener("click",()=>this.sendMessage());let o=document.getElementById("clear-chat-button");o&&o.addEventListener("click",()=>this.clearChat()),this.domElements.exportChatButton&&this.domElements.exportChatButton.addEventListener("click",()=>this.exportChat());let r=document.getElementById("demo-continue");r&&r.addEventListener("click",()=>this.continueDemo());let h=document.getElementById("demo-setup");h&&h.addEventListener("click",()=>this.setupApiKey());let f=document.querySelector(".modal-close");f&&f.addEventListener("click",()=>this.hideModal()),document.addEventListener("click",c=>{this.domElements.sidebar&&!this.domElements.sidebar.contains(c.target)&&this.domElements.menuButton&&!this.domElements.menuButton.contains(c.target)&&this.hideSidebar()})}determineInitialView(){this.stateManager.getState().apiKey?this.showView("chat"):this.showModal()}showModal(){let e=document.getElementById("demo-modal");e&&e.classList.remove("hidden")}hideModal(){let e=document.getElementById("demo-modal");e&&e.classList.add("hidden")}continueDemo(){this.hideModal(),this.showView("chat"),this.addMessage("assistant",`Welcome to TabTalk AI Demo! \u{1F916}

You can try the interface with simulated responses. To use real AI features, please set up your Gemini API key.

Try asking me something or paste a URL to analyze!`,"demo")}setupApiKey(){this.hideModal(),this.showView("settings")}toggleTheme(){this.stateManager.toggleDarkMode(),this.applyTheme(),this.stateManager.saveState()}applyTheme(){this.stateManager.getState().isDarkMode?document.body.classList.add("dark-mode"):document.body.classList.remove("dark-mode")}toggleSidebar(){this.domElements.sidebar&&this.domElements.sidebar.classList.toggle("hidden")}hideSidebar(){this.domElements.sidebar&&this.domElements.sidebar.classList.add("hidden")}showView(e){Object.values(this.views).forEach(t=>{t&&t.classList.add("hidden")}),this.views[e]&&this.views[e].classList.remove("hidden"),this.domElements.quickActions&&(e==="chat"&&this.currentContent?this.domElements.quickActions.classList.remove("hidden"):this.domElements.quickActions.classList.add("hidden")),this.updateEmptyState()}updateEmptyState(){let e=document.getElementById("empty-state"),t=document.getElementById("messages-container");this.views.chat&&!this.views.chat.classList.contains("hidden")&&this.stateManager.getState().chatHistory.length===0?(e&&e.classList.remove("hidden"),t&&(t.style.display="none")):(e&&e.classList.add("hidden"),t&&(t.style.display="flex"))}saveSettings(){let e=this.domElements.apiKeyInput?.value.trim();if(!e){alert("Please enter a valid API key.");return}this.stateManager.updateApiKey(e),this.stateManager.saveState(),this.apiClient=new p(e,"web");let t=document.querySelector(".onboarding-info");t&&(t.style.display="none"),this.showView("chat"),this.addMessage("assistant","Great! Your API key has been saved. You can now chat with any webpage content. Try pasting a URL or some text to get started!")}cancelSettings(){let e=this.stateManager.getState();this.showView(e.apiKey?"chat":"settings")}async analyzeUrl(){let e=this.domElements.urlInput?.value.trim();if(!e){alert("Please enter a valid URL.");return}if(!I(e)){alert("Please enter a valid URL (e.g., https://example.com).");return}this.setLoading(!0,"Analyzing URL...");try{let t=await fetch(`/api/extract-content?url=${encodeURIComponent(e)}`);if(t.ok){let s=await t.json();this.currentContent=s.content,this.domElements.pageTitle&&(this.domElements.pageTitle.textContent=s.title||"Content Analysis"),this.domElements.pageStatus&&(this.domElements.pageStatus.textContent=`\u2705 Content loaded from ${new URL(e).hostname}`),this.showView("chat"),this.addMessage("assistant",`I've loaded the content from **${new URL(e).hostname}**. What would you like to know about this page?

You can ask me to:
- Summarize the main points
- Extract key information
- Answer specific questions
- Analyze the content`)}else throw new Error("Failed to fetch content")}catch(t){console.error("Error analyzing URL:",t),this.domElements.pageStatus&&(this.domElements.pageStatus.textContent="\u274C Error loading content"),this.addMessage("assistant",`Sorry, I couldn't analyze that URL. Error: ${t.message}`)}finally{this.setLoading(!1)}}cancelUrlInput(){this.showView("chat")}async sendMessage(){if(!this.domElements.messageInput||!this.apiClient||!this.domElements.messageInput.value.trim())return;let e=this.domElements.messageInput.value.trim();this.domElements.messageInput.value="",this.handleInputChange(),this.domElements.messageInput.focus();try{this.setLoading(!0,"Thinking..."),this.addMessage("user",e);let t,s="normal";if(e.toLowerCase().includes("summarize")||e.toLowerCase().includes("summary")?s=n.SUMMARY:e.toLowerCase().includes("key point")||e.toLowerCase().includes("keypoint")?s=n.KEYPOINTS:e.toLowerCase().includes("analyze")||e.toLowerCase().includes("analysis")?s=n.ANALYSIS:(e.toLowerCase().includes("faq")||e.toLowerCase().includes("question"))&&(s=n.FAQ),this.currentContent){let a=`Content:
${this.currentContent}

User Question:
${e}`;t=await this.apiClient.generateContent(a)}else t=await this.apiClient.generateContent(e);this.addMessage("assistant",t,s)}catch(t){console.error("Error sending message:",t),this.addMessage("assistant",`Sorry, I encountered an error: ${t.message}`,"error")}finally{this.setLoading(!1)}}async handleQuickAction(e){if(!this.currentContent){alert("Please analyze a URL or paste content first.");return}this.setLoading(!0,`Generating ${e}...`);try{let t,s;switch(e){case n.SUMMARY:t=`Please provide a concise summary of the following content:

${this.currentContent}`,s=n.SUMMARY;break;case n.KEYPOINTS:t=`Please extract 5-7 key points from the following content:

${this.currentContent}`,s=n.KEYPOINTS;break;case n.ANALYSIS:t=`Please provide a detailed analysis of the following content:

${this.currentContent}`,s=n.ANALYSIS;break;case n.FAQ:t=`Please generate 5-8 frequently asked questions and answers based on the following content:

${this.currentContent}`,s=n.FAQ;break;default:throw new Error("Unsupported action type")}let a=await this.apiClient.generateContent(t);this.addMessage("assistant",a,s)}catch(t){console.error("Error handling quick action:",t),this.addMessage("assistant",`Sorry, I couldn't generate the ${e}. Error: ${t.message}`)}finally{this.setLoading(!1)}}handleInputChange(){if(!this.domElements.messageInput)return;this.domElements.messageInput.style.height="auto";let e=Math.min(this.domElements.messageInput.scrollHeight,150);this.domElements.messageInput.style.height=`${e}px`;let t=document.querySelector(".char-count");if(t){let s=this.domElements.messageInput.value.length;t.textContent=`${s}/2000`,t.style.color=s>1800?"#ef4444":""}this.domElements.sendButton&&(this.domElements.sendButton.disabled=!this.domElements.messageInput.value.trim())}handleKeyDown(e){e.key==="Enter"&&!e.shiftKey&&(e.preventDefault(),this.domElements.messageInput&&this.domElements.messageInput.value.trim()&&this.domElements.sendButton&&!this.domElements.sendButton.disabled&&this.sendMessage())}addMessage(e,t,s="normal"){let a=this.stateManager.getState(),i=new Date().toISOString(),l={role:e,content:t,contentType:s,timestamp:i},o=[...a.chatHistory,l];this.stateManager.updateChatHistory(o),this.stateManager.saveState(),this.renderMessages(),this.updateEmptyState()}renderMessages(){let e=this.stateManager.getState();this.domElements.messagesContainer&&(this.domElements.messagesContainer.innerHTML="",e.chatHistory.forEach(t=>{let s=this.messageRenderer.renderMessage(t);this.domElements.messagesContainer.appendChild(s)}),this.domElements.messagesContainer.scrollTo({top:this.domElements.messagesContainer.scrollHeight,behavior:"smooth"}))}setLoading(e,t="..."){this.stateManager.setLoading(e),this.domElements.sendButton&&(this.domElements.sendButton.disabled=e||!this.domElements.messageInput?.value.trim()),this.domElements.messageInput&&(this.domElements.messageInput.disabled=e),this.domElements.pageStatus&&(e?this.domElements.pageStatus.textContent=t:this.domElements.pageStatus.textContent.startsWith("\u2705")||(this.domElements.pageStatus.textContent=S.DONE))}clearChat(){this.stateManager.updateChatHistory([]),this.stateManager.saveState(),this.renderMessages(),this.updateEmptyState(),this.addMessage("assistant","Chat cleared! Feel free to ask me anything or try the quick action buttons above.","demo")}exportChat(){let e=this.stateManager.getState();if(!e.chatHistory.length){alert("No chat history to export.");return}let t=JSON.stringify({chatHistory:e.chatHistory,exportedAt:new Date().toISOString()},null,2),s="data:application/json;charset=utf-8,"+encodeURIComponent(t),a=`tabtalk-chat-${new Date().toISOString().slice(0,10)}.json`,i=document.createElement("a");i.setAttribute("href",s),i.setAttribute("download",a),i.click()}setupAutoResize(){this.domElements.messageInput&&this.domElements.messageInput.addEventListener("input",()=>{this.domElements.messageInput.style.height="auto";let e=Math.min(this.domElements.messageInput.scrollHeight,150);this.domElements.messageInput.style.height=`${e}px`})}};document.addEventListener("DOMContentLoaded",()=>{let d=new E});})();
